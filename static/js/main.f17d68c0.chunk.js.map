{"version":3,"sources":["Formatters.tsx","assets/img/bnbfarm-glow.png","components/Plan.tsx","components/UserStats.tsx","components/ContractStats.tsx","components/ConnectButton.tsx","assets/img/bnbfarm-header-text.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["formatEthFromWei","value","Web3","utils","fromWei","Intl","NumberFormat","maximumSignificantDigits","format","parseFloat","formatNumber","Plan","Box","props","label","percentage","days","minInvest","planIndex","labelNode","summaryNode","amountInput","withdrawTax","state","disabled","balance","readyForPayout","reinvestPossible","componentDidMount","calcROI","checkState","setInterval","componentWillUnmount","setState","window","connected","farm_contract","methods","getUserActiveInvestments","walletAddress","call","then","result","catch","err","console","log","getUserDividendsAfterTAX","web3","current","roi","innerText","finalAmount","innerHTML","onChange_Amount","onClick_Invest","ref","refferalAddress","isAddress","invest","send","toWei","from","response","onClick_ReInvest","reinvest","render","Card","sx","minWidth","CardContent","style","width","float","marginRight","marginBottom","src","bnbfarm","Typography","fontSize","color","gutterBottom","mb","variant","TextField","inputRef","type","onChange","defaultValue","toFixed","fullWidth","toString","Button","my","size","onClick","marginTop","CardActions","React","createRef","Component","UserStats","userInfo","totalDeposit","totalReferrals","totalWithdrawn","referralBonus","availableForWithdraw","timeLeftUntilFull","baseState","myBalanceNode","onClick_Withdraw","withdraw","getUserInfo","pUserInfo","eth","getBalance","getUserReferralBonusAfterTax","getUserCutoff","hoursLeft","Date","parseInt","getTime","timeLeftText","Grid","container","item","xs","md","ContractStats","contractBalance","totalInvested","totalReinvested","onClick_VerifiedContract","a","document","createElement","target","href","contractAddress","click","getContractBalance","totalReInvested","ConnectButton","handleConnectWallet","initialConnect","ethereum","request","method","res","length","confirm","updateRefLink","forceUpdate","Contract","contract_abi","handleDeactivateAccount","refLinkWalledId","getElementById","button","slice","padding","Item","styled","Paper","theme","typography","h3","spacing","textAlign","palette","text","secondary","App","abi","refAddress","URLSearchParams","location","search","get","flexGrow","margin","display","className","bnbfarmtext","wordBreak","origin","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.f17d68c0.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport function formatEthFromWei (value: string)  {\r\n    value = Web3.utils.fromWei(value);\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: 2}).format(parseFloat(value));\r\n    //return parseFloat(value).toFixed(5).toLocaleString();\r\n };\r\n\r\n export function formatNumber (value: any)  {\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: 2}).format(parseFloat(value));\r\n };","export default __webpack_public_path__ + \"static/media/bnbfarm-glow.6c1f1fc1.png\";","import React from 'react';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { formatEthFromWei, formatNumber } from '../Formatters';\r\nimport bnbfarm from \"../assets/img/bnbfarm-glow.png\";\r\n\r\n\r\ninterface PlanProps {\r\n  label?: string;\r\n  percentage: number;\r\n  days: number;\r\n  planIndex: number;\r\n  minInvest: number;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n\r\nclass Plan extends React.Component<PlanProps> {\r\n\r\n  public label? : string;\r\n  public percentage: number;\r\n  public days: number;\r\n  public minInvest: number;\r\n  public planIndex: number;\r\n\r\n  private labelNode: React.RefObject<HTMLSpanElement>;\r\n  private summaryNode: React.RefObject<HTMLSpanElement>;\r\n  private amountInput: React.RefObject<StandardTextFieldProps>;\r\n\r\n\r\n  private withdrawTax: number = 25;\r\n\r\n  state = {\r\n    disabled: false,\r\n    balance: \"0\",\r\n    readyForPayout: \"0\",\r\n    reinvestPossible: false\r\n  }\r\n\r\n\r\n  constructor(props: PlanProps) {\r\n      super(props);\r\n\r\n      this.labelNode = React.createRef();\r\n      this.summaryNode = React.createRef();\r\n      this.amountInput = React.createRef();\r\n\r\n      // properties\r\n      this.percentage = props.percentage;\r\n      this.days = props.days;\r\n      this.label = props.label;\r\n      this.minInvest = props.minInvest;\r\n      this.planIndex = props.planIndex;\r\n\r\n      //  scope hitch\r\n      //this.onChange_Amount = this.onChange_Amount.bind(this);\r\n      //this.onClick_Invest = this.onClick_Invest.bind(this);\r\n      //this.checkState = this.checkState.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => { \r\n    this.calcROI();\r\n\r\n    this.checkState();\r\n    setInterval(this.checkState, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  checkState = () => {  \r\n    this.setState({\r\n      disabled: !window.connected\r\n    });\r\n\r\n    if(window.connected !== true){\r\n      return;\r\n    }\r\n\r\n    // My Invest in current Plan\r\n    //\r\n    window.farm_contract.methods.getUserActiveInvestments(window.walletAddress, this.planIndex).call().then((result) => {\r\n      this.setState({\r\n        balance: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    // ReadyForPayout (current Plan)\r\n    //\r\n    window.farm_contract.methods.getUserDividendsAfterTAX(window.walletAddress, this.planIndex).call().then((result) => {\r\n      this.setState({\r\n        readyForPayout: result\r\n      });\r\n\r\n      if(parseFloat(window.web3.utils.fromWei(result)) > 0){\r\n        this.setState({\r\n          reinvestPossible: true\r\n        })\r\n      }\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  calcROI = () => {\r\n    if(this.summaryNode.current == null){\r\n      return;\r\n    }\r\n\r\n    let roi = this.percentage * this.days * (100 - this.withdrawTax) / 100;\r\n\r\n    this.summaryNode.current.innerText = formatNumber(roi)  + \"% ROI\";\r\n\r\n    if(this.amountInput.current == null){\r\n      return;\r\n    }\r\n\r\n    let finalAmount: number = this.days * ( parseFloat(this.amountInput.current.value as string) / 100 * this.percentage ) * (100 - this.withdrawTax) / 100;\r\n\r\n    this.summaryNode.current.innerHTML = this.summaryNode.current.innerHTML + \"<br>\" + formatNumber(finalAmount) + \" BNB after \" + this.days + \" days.\"\r\n  }\r\n\r\n  onChange_Amount = () => {\r\n    this.calcROI();\r\n  }\r\n\r\n  onClick_Invest = () => {\r\n    if(!this.amountInput.current){\r\n      return;\r\n    }\r\n\r\n    let ref = window.refferalAddress;\r\n    if (!window.web3.utils.isAddress(ref)){ref=window.walletAddress}\r\n    console.log(\"this.planIndex\", this.planIndex);\r\n    window.farm_contract.methods.invest( ref, this.planIndex)\r\n      .send({ value: window.web3.utils.toWei(this.amountInput.current.value as string), from:window.walletAddress}).then((response:any) => {\r\n\r\n      }).catch((err:any) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n\r\n  onClick_ReInvest = () => {\r\n      window.farm_contract.methods.reinvest( this.planIndex ).send({\r\n        from: window.walletAddress\r\n      }).catch((err:any) => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n            <img style={{width: \"35%\", float: \"left\", marginRight: \"16px\", marginBottom: \"16px\"}} src={bnbfarm}/>\r\n            <Typography ref={this.labelNode} sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                {this.label}\r\n            </Typography>\r\n            <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                {this.percentage}% {this.days} Days\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n                active invest: {formatEthFromWei(this.state.balance)} BNB\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n              available: {formatEthFromWei(this.state.readyForPayout)} BNB\r\n            </Typography>\r\n            <Typography variant=\"h2\">\r\n                <TextField inputRef={this.amountInput} label={\"amount\"} type=\"number\" onChange={this.onChange_Amount} defaultValue={this.minInvest?.toFixed(3)} fullWidth={true}></TextField>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ fontSize: 14 }} color=\"text.secondary\">\r\n                Min {formatNumber(this.minInvest.toString())} BNB\r\n            </Typography>\r\n            <Button sx={{my: 1}} disabled={this.state.disabled} size=\"large\" variant=\"contained\" onClick={this.onClick_Invest} fullWidth={true}>Invest</Button>\r\n            <Button color=\"secondary\" sx={{my: 1}} disabled={!this.state.reinvestPossible} size=\"large\" variant=\"contained\" onClick={this.onClick_ReInvest} fullWidth={true}>Reinvest</Button>\r\n\r\n            <Typography style={{marginTop: \"16px\"}} ref={this.summaryNode} variant=\"body2\" sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n\r\n            </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n        <Typography sx={{ fontSize: 12 }} color=\"text.secondary\">\r\n                * the calculation considers {this.withdrawTax}% tax (5% for marketing\r\n                and 20% will stay in contract for longevity)\r\n        </Typography>\r\n        </CardActions>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Plan;","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport { Grid } from '@mui/material';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { GetUserInfoResponse } from '../assets/abi/farm-contract';\r\n\r\nimport { formatEthFromWei } from '../Formatters';\r\n\r\n\r\n\r\ninterface UserStatsProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n\r\nclass UserStats extends React.Component<UserStatsProps> {\r\n\r\n  state = {\r\n    userInfo: { totalDeposit: \"0\", totalReferrals: \"0\", totalWithdrawn: \"0\"},\r\n    balance: \"\",\r\n    referralBonus: \"\",\r\n    availableForWithdraw: \"\",\r\n    timeLeftUntilFull: \"\"\r\n  }\r\n  baseState: any;\r\n\r\n  private myBalanceNode: React.RefObject<HTMLSpanElement>;\r\n\r\n  constructor(props: UserStatsProps) {\r\n      super(props);\r\n\r\n      this.baseState = this.state;\r\n\r\n      this.myBalanceNode = React.createRef();\r\n\r\n\r\n      // properties\r\n  }\r\n\r\n  componentDidMount = () => { \r\n\r\n    this.checkState();\r\n    setInterval(this.checkState, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  onClick_Withdraw = () => {\r\n    window.farm_contract.methods.withdraw().send({\r\n      from: window.walletAddress\r\n    }).catch((err: any) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  checkState = () => {  \r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n    window.farm_contract.methods.getUserInfo(window.walletAddress).call().then((pUserInfo: GetUserInfoResponse) => {\r\n      this.setState({\r\n        userInfo: pUserInfo\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.web3.eth.getBalance(window.walletAddress).then(result => {\r\n      this.setState({balance: result});\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getUserReferralBonusAfterTax(window.walletAddress).call().then((result: string) => {\r\n      this.setState({\r\n        referralBonus: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getUserDividendsAfterTAX(window.walletAddress, -1).call().then((result: string) => {\r\n      this.setState({\r\n        availableForWithdraw: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getUserCutoff(window.walletAddress).call().then((result: string) => {\r\n      let cutOffDate = new Date(parseInt(result)*1000);\r\n      let hoursLeft = (cutOffDate.getTime() - new Date().getTime()) / 1000 / 60 / 60 // milliseconds to hours;\r\n      let timeLeftText = new Intl.NumberFormat('en-GB').format(hoursLeft);\r\n      if( hoursLeft <= 0 ){\r\n        timeLeftText = \"0\";\r\n      }\r\n\r\n      this.setState({\r\n        timeLeftUntilFull: timeLeftText\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n  }  \r\n\r\n  render = () => {\r\n    return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                my wallet\r\n              </Typography>\r\n              <Typography ref={this.myBalanceNode} sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n              {formatEthFromWei(this.state.balance)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  deposits\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.userInfo.totalDeposit)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  withdrawn\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.userInfo.totalWithdrawn)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                Referral Bonus\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.referralBonus)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                available for withdraw\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.availableForWithdraw)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                claim within *\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {this.state.timeLeftUntilFull} hours\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Button sx={{my: 1}} size=\"large\" variant=\"contained\" onClick={this.onClick_Withdraw}>Withdraw</Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 12 }} color=\"text.secondary\" gutterBottom>\r\n              * everyone has to pay out their profits within this period. if the timer goes to 0, the profits will not continue to increase until a payout or reinvest takes place\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n\r\n        </CardActions>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserStats;","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport { Grid } from '@mui/material';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { GetUserInfoResponse } from '../assets/abi/farm-contract';\r\n\r\nimport { formatEthFromWei } from '../Formatters';\r\n\r\n\r\n\r\ninterface ContractStatsProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n\r\nclass ContractStats extends React.Component<ContractStatsProps> {\r\n\r\n  state = {\r\n    contractBalance: \"\",\r\n    totalInvested: \"\",\r\n    totalReinvested: \"\"\r\n  }\r\n  baseState: any;\r\n  constructor(props: ContractStatsProps) {\r\n      super(props);\r\n\r\n      this.baseState = this.state;\r\n\r\n\r\n      // properties\r\n  }\r\n\r\n  componentDidMount = () => { \r\n\r\n    this.checkState();\r\n    setInterval(this.checkState, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  onClick_Withdraw = () => {\r\n    window.farm_contract.methods.withdraw().send({\r\n      from: window.walletAddress\r\n    }).catch((err: any) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  onClick_VerifiedContract = () => {\r\n    let a = document.createElement(\"a\");\r\n    a.target = \"_blank\";\r\n    a.href = \"https://testnet.bscscan.com/address/\"+ window.contractAddress +\"#code\";\r\n    a.click();\r\n  }\r\n\r\n  checkState = () => {  \r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }    \r\n    window.farm_contract.methods.totalInvested().call().then((result: string) => {\r\n      this.setState({\r\n        totalInvested: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getContractBalance().call().then((result: string) => {\r\n      this.setState({\r\n        contractBalance: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.totalReInvested().call().then((result: string) => {\r\n      this.setState({\r\n        totalReinvested: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n  }  \r\n\r\n  render = () => {\r\n    return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                total invested\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n              {formatEthFromWei(this.state.totalInvested)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  contract balance\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.contractBalance)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  total reinvested\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.totalReinvested)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button sx={{my: 1}} size=\"small\" onClick={this.onClick_VerifiedContract}>Verified Contract</Button>\r\n        </CardActions>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContractStats;","import React from 'react';\r\nimport { Button, Box } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport {ContractContext} from '../assets/abi/farm-contract';\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  \r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      this.handleConnectWallet();\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum);\r\n\r\n      window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n        if (res.length >= 1) {\r\n          window.connected = true;\r\n          window.walletAddress = res[0];\r\n          this.updateRefLink();\r\n          //console.log(\"eth_accounts\", res);\r\n          this.forceUpdate();\r\n\r\n          window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateRefLink = () => {\r\n    let refLinkWalledId = document.getElementById(\"walletAddressRefLink\");\r\n    if(refLinkWalledId != null){\r\n      refLinkWalledId.innerText = window.walletAddress;\r\n    }\r\n  }\r\n  \r\n\r\n  render = () => {\r\n\r\n    let button;\r\n    if (window.connected) { \r\n      button = <Button variant=\"contained\" onClick={this.handleDeactivateAccount}>disconnect</Button>;    \r\n    } else {\r\n      button = <Button variant=\"contained\" onClick={this.initialConnect}>connect</Button>;  \r\n    }\r\n\r\n    return (\r\n      <Box>\r\n        <div>\r\n          {window.walletAddress &&\r\n            `${window.walletAddress.slice(0, 6)}...${window.walletAddress.slice(\r\n              window.walletAddress.length - 4,\r\n              window.walletAddress.length\r\n            )}`}\r\n        </div>\r\n        <div style={{padding: \"16px 0 16px 0\"}}>\r\n          {button}\r\n        </div>\r\n        \r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","export default __webpack_public_path__ + \"static/media/bnbfarm-header-text.752073f3.png\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Plan from './components/Plan';\r\nimport UserStats from './components/UserStats';\r\nimport ContractStats from './components/ContractStats';\r\nimport { AbiItem } from 'ethereum-abi-types-generator';\r\n\r\nimport ConnectButton from \"./components/ConnectButton\";\r\n\r\nimport bnbfarm from \"./assets/img/bnbfarm-glow.png\";\r\nimport bnbfarmtext from \"./assets/img/bnbfarm-header-text.png\";\r\n\r\nimport {ContractContext} from './assets/abi/farm-contract';\r\nimport Web3 from \"web3\";\r\n\r\n//\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/farm-contract.json\";\r\n//const contractAddress: string = '0x0f6EBFF0d3Abc8E061656E5a34F8d70aaf687Cba';\r\n//const contractAddress: string = '0x38B655c43518ecA919B75d8AC6BF8771858dFD5E';\r\n//const contractAddress: string = '0x13f1E7cb0b2e1e0A2189CB23f9aDbFECB70b5b63';\r\nconst contractAddress: string = '0x5dcE1204509689830F20f6300bFfdCB1814BDdbe';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    farm_contract: ContractContext;\r\n    web3: Web3;\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    contract_abi: AbiItem[]\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n  }\r\n}\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction App() {\r\n  \r\n  window.contractAddress = contractAddress;\r\n  window.contract_abi = abi as AbiItem[];\r\n\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  let refAddress = urlParams.get('ref');\r\n  if(refAddress != null){\r\n    window.refferalAddress = refAddress;\r\n  }\r\n\r\n  //  Main Layout\r\n  //\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} style={{width: \"80%\", margin: \"auto\", marginTop: \"32px\"}}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          {/* <Item style={{textAlign: \"left\"}}><img style={{width: \"100%\"}} src={headerbg}/></Item> */}\r\n          <Item sx={{ display: { xs: 'block', md: 'none' } }} className={\"flex-middle-center\"}>\r\n            <div className={\"flex-middle-center\"}>\r\n              <img style={{width: \"100%\"}} src={bnbfarmtext}/>\r\n            </div>\r\n          </Item>\r\n          <Item sx={{ display: { xs: 'none', md: 'block' } }}>\r\n            <div className={\"flex-middle-center\"}>\r\n              <img style={{width: \"10%\"}} src={bnbfarm}/>\r\n              <img style={{width: \"80%\"}} src={bnbfarmtext}/>\r\n            </div>\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper style={{padding: \"16px\"}}>\r\n            <ConnectButton />\r\n\r\n            <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n              referral link\r\n            </Typography>\r\n            <Typography sx={{ fontSize: 16 }} style={{wordBreak: \"break-all\"}} color=\"text.primary\" gutterBottom>\r\n              {window.location.origin}?ref=<span id={\"walletAddressRefLink\"}></span>\r\n            </Typography>\r\n            <Typography sx={{ fontSize: 12 }} color=\"text.secondary\" gutterBottom>\r\n              For the friends that you invite you receive 5% of their deposits.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <ContractStats></ContractStats>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <UserStats></UserStats>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Plan label={\"Plan 1\"} minInvest={0.05} percentage={23} days={7} planIndex={0}></Plan>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Plan label={\"Plan 2\"} minInvest={0.05} percentage={7} days={30} planIndex={1}></Plan>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Plan label={\"Plan 3\"} minInvest={0.05} percentage={5} days={50}  planIndex={2}></Plan>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Plan label={\"VIP Plan\"} minInvest={1.5} percentage={32} days={5}  planIndex={3}></Plan>\r\n        </Grid>\r\n        {/* <Grid item xs={12} md={12}>\r\n          <PlanDynamic label={\"Dynamic\"} percentage={7} days={20}></PlanDynamic>\r\n        </Grid> */}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}