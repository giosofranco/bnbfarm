{"version":3,"sources":["Formatters.tsx","assets/img/bnbfarm.png","components/Plan.tsx","components/UserStats.tsx","components/ConnectButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["formatEthFromWei","value","Web3","utils","fromWei","parseFloat","toFixed","toLocaleString","Plan","Box","props","label","percentage","days","minInvest","planIndex","labelNode","summaryNode","amountInput","withdrawTax","state","disabled","balance","readyForPayout","reinvestPossible","componentDidMount","calcROI","checkState","setInterval","componentWillUnmount","setState","window","connected","farm_contract","methods","getUserActiveInvestments","walletAddress","call","then","result","catch","err","console","log","getUserDividendsAfterTAX","web3","current","roi","innerText","finalAmount","innerHTML","onChange_Amount","onClick_Invest","ref","isAddress","invest","send","toWei","from","response","onClick_ReInvest","reinvest","render","Card","sx","minWidth","CardContent","style","width","float","marginRight","marginBottom","src","bnbfarm","Typography","fontSize","color","gutterBottom","mb","variant","TextField","inputRef","type","onChange","defaultValue","fullWidth","Button","my","size","onClick","marginTop","CardActions","React","createRef","Component","UserStats","userInfo","totalDeposit","totalReferrals","totalWithdrawn","referralBonus","availableForWithdraw","myBalanceNode","onClick_Withdraw","withdraw","getUserInfo","pUserInfo","eth","getBalance","getUserReferralBonusAfterTax","Grid","container","item","xs","md","ConnectButton","handleConnectWallet","initialConnect","ethereum","request","method","res","length","confirm","a","document","createElement","target","href","click","forceUpdate","Contract","contract_abi","contractAddress","handleDeactivateAccount","Item","styled","Paper","theme","typography","h3","padding","spacing","textAlign","palette","text","secondary","App","abi","flexGrow","margin","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.6e747f43.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport function formatEthFromWei (value: string)  {\r\n    value = Web3.utils.fromWei(value);\r\n    return parseFloat(value).toFixed(5).toLocaleString();\r\n };","export default __webpack_public_path__ + \"static/media/bnbfarm.8dd652b7.png\";","import React from 'react';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { formatEthFromWei } from '../Formatters';\r\nimport bnbfarm from \"../assets/img/bnbfarm.png\";\r\n\r\n\r\ninterface PlanProps {\r\n  label?: string;\r\n  percentage: number;\r\n  days: number;\r\n  planIndex: number;\r\n  minInvest: number;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n\r\nclass Plan extends React.Component<PlanProps> {\r\n\r\n  public label? : string;\r\n  public percentage: number;\r\n  public days: number;\r\n  public minInvest?: number;\r\n  public planIndex: number;\r\n\r\n  private labelNode: React.RefObject<HTMLSpanElement>;\r\n  private summaryNode: React.RefObject<HTMLSpanElement>;\r\n  private amountInput: React.RefObject<StandardTextFieldProps>;\r\n\r\n\r\n  private withdrawTax: number = 25;\r\n\r\n  state = {\r\n    disabled: false,\r\n    balance: \"0\",\r\n    readyForPayout: \"0\",\r\n    reinvestPossible: false\r\n  }\r\n\r\n\r\n  constructor(props: PlanProps) {\r\n      super(props);\r\n\r\n      this.labelNode = React.createRef();\r\n      this.summaryNode = React.createRef();\r\n      this.amountInput = React.createRef();\r\n\r\n      // properties\r\n      this.percentage = props.percentage;\r\n      this.days = props.days;\r\n      this.label = props.label;\r\n      this.minInvest = props.minInvest;\r\n      this.planIndex = props.planIndex;\r\n\r\n      //  scope hitch\r\n      //this.onChange_Amount = this.onChange_Amount.bind(this);\r\n      //this.onClick_Invest = this.onClick_Invest.bind(this);\r\n      //this.checkState = this.checkState.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => { \r\n    this.calcROI();\r\n\r\n    this.checkState();\r\n    setInterval(this.checkState, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  checkState = () => {  \r\n    this.setState({\r\n      disabled: !window.connected\r\n    });\r\n\r\n    if(window.connected !== true){\r\n      return;\r\n    }\r\n\r\n    // My Invest in current Plan\r\n    //\r\n    window.farm_contract.methods.getUserActiveInvestments(window.walletAddress, this.planIndex).call().then((result) => {\r\n      this.setState({\r\n        balance: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    // ReadyForPayout (current Plan)\r\n    //\r\n    window.farm_contract.methods.getUserDividendsAfterTAX(window.walletAddress, this.planIndex).call().then((result) => {\r\n      this.setState({\r\n        readyForPayout: result\r\n      });\r\n\r\n      if(parseFloat(window.web3.utils.fromWei(result)) > 0){\r\n        this.setState({\r\n          reinvestPossible: true\r\n        })\r\n      }\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  calcROI = () => {\r\n    if(this.summaryNode.current == null){\r\n      return;\r\n    }\r\n\r\n    let roi = this.percentage * this.days * (100 - this.withdrawTax) / 100;\r\n\r\n    this.summaryNode.current.innerText = roi.toLocaleString()  + \"% ROI\";\r\n\r\n    if(this.amountInput.current == null){\r\n      return;\r\n    }\r\n\r\n    let finalAmount: number = this.days * ( parseFloat(this.amountInput.current.value as string) / 100 * this.percentage ) * (100 - this.withdrawTax) / 100;\r\n\r\n    this.summaryNode.current.innerHTML = this.summaryNode.current.innerHTML + \"<br>\" + finalAmount.toLocaleString() + \" BNB after \" + this.days + \" days.\"\r\n  }\r\n\r\n  onChange_Amount = () => {\r\n    this.calcROI();\r\n  }\r\n\r\n  onClick_Invest = () => {\r\n    if(!this.amountInput.current){\r\n      return;\r\n    }\r\n\r\n    let ref = \"\";\r\n    if (!window.web3.utils.isAddress(ref)){ref=window.walletAddress}\r\n    window.farm_contract.methods.invest( ref, this.planIndex)\r\n      .send({ value: window.web3.utils.toWei(this.amountInput.current.value as string), from:window.walletAddress}).then((response:any) => {\r\n        \r\n      }).catch((err:any) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n\r\n  onClick_ReInvest = () => {\r\n      window.farm_contract.methods.reinvest( this.planIndex ).send({\r\n        from: window.walletAddress\r\n      }).catch((err:any) => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n            <img style={{width: \"35%\", float: \"left\", marginRight: \"16px\", marginBottom: \"16px\"}} src={bnbfarm}/>\r\n            <Typography ref={this.labelNode} sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                {this.label}\r\n            </Typography>\r\n            <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                {this.percentage}% {this.days} Days\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n                active invest: {formatEthFromWei(this.state.balance)} BNB\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n              available: {formatEthFromWei(this.state.readyForPayout)} BNB\r\n            </Typography>\r\n            <Typography variant=\"h2\">\r\n                <TextField inputRef={this.amountInput} label={\"amount\"} type=\"number\" onChange={this.onChange_Amount} defaultValue={this.minInvest?.toFixed(3)} fullWidth={true}></TextField>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ fontSize: 14 }} color=\"text.secondary\">\r\n                Min {this.minInvest?.toFixed(3)} BNB\r\n            </Typography>\r\n            <Button sx={{my: 1}} disabled={this.state.disabled} size=\"large\" variant=\"contained\" onClick={this.onClick_Invest} fullWidth={true}>Invest</Button>\r\n            <Button color=\"secondary\" sx={{my: 1}} disabled={!this.state.reinvestPossible} size=\"large\" variant=\"contained\" onClick={this.onClick_ReInvest} fullWidth={true}>Reinvest</Button>\r\n\r\n            <Typography style={{marginTop: \"16px\"}} ref={this.summaryNode} variant=\"body2\" sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n\r\n            </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n        <Typography sx={{ fontSize: 12 }} color=\"text.secondary\">\r\n                * the calculation considers {this.withdrawTax}% tax (5% for marketing\r\n                and 20% will stay in contract for longevity)\r\n        </Typography>\r\n        </CardActions>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Plan;","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport { Grid } from '@mui/material';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { GetUserInfoResponse } from '../assets/abi/farm-contract';\r\n\r\nimport { formatEthFromWei } from '../Formatters';\r\n\r\n\r\n\r\ninterface UserStatsProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n\r\nclass UserStats extends React.Component<UserStatsProps> {\r\n\r\n  state = {\r\n    userInfo: { totalDeposit: \"0\", totalReferrals: \"0\", totalWithdrawn: \"0\"},\r\n    balance: \"\",\r\n    referralBonus: \"\",\r\n    availableForWithdraw: \"\"\r\n  }\r\n\r\n  private myBalanceNode: React.RefObject<HTMLSpanElement>;\r\n\r\n  constructor(props: UserStatsProps) {\r\n      super(props);\r\n\r\n      this.myBalanceNode = React.createRef();\r\n\r\n\r\n      // properties\r\n  }\r\n\r\n  componentDidMount = () => { \r\n\r\n    this.checkState();\r\n    setInterval(this.checkState, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  onClick_Withdraw = () => {\r\n    window.farm_contract.methods.withdraw().send({\r\n      from: window.walletAddress\r\n    }).catch((err: any) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  checkState = () => {  \r\n    if(window.connected !== true){\r\n      return;\r\n    }\r\n    window.farm_contract.methods.getUserInfo(window.walletAddress).call().then((pUserInfo: GetUserInfoResponse) => {\r\n      this.setState({\r\n        userInfo: pUserInfo\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.web3.eth.getBalance(window.walletAddress).then(result => {\r\n      this.setState({balance: result});\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getUserReferralBonusAfterTax(window.walletAddress).call().then((result: string) => {\r\n      this.setState({\r\n        referralBonus: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.getUserDividendsAfterTAX(window.walletAddress, -1).call().then((result: string) => {\r\n      this.setState({\r\n        availableForWithdraw: result\r\n      });\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n  }  \r\n\r\n  render = () => {\r\n    return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                my wallet\r\n              </Typography>\r\n              <Typography ref={this.myBalanceNode} sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n              {formatEthFromWei(this.state.balance)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  deposits\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.userInfo.totalDeposit)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                  withdrawn\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.userInfo.totalWithdrawn)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                Referral Bonus\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.referralBonus)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n                available for withdraw\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.availableForWithdraw)} BNB\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n            <Button sx={{my: 1}} size=\"large\" variant=\"contained\" onClick={this.onClick_Withdraw}>Withdraw</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n\r\n        </CardActions>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserStats;","import React from 'react';\r\nimport { Button, Box } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport {ContractContext} from '../assets/abi/farm-contract';\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  \r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      this.handleConnectWallet();\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n      if (res.length >= 1) {\r\n        window.connected = true;\r\n        window.walletAddress = res[0];\r\n        //console.log(\"eth_accounts\", res);\r\n        this.forceUpdate();\r\n\r\n        window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n\r\n  }\r\n  \r\n\r\n  render = () => {\r\n    return (\r\n      <Box>\r\n        <div>\r\n          {window.walletAddress}\r\n        </div>\r\n        <div>\r\n          \r\n        </div>\r\n        <Button variant=\"contained\" onClick={this.initialConnect}>connect</Button>\r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { styled } from '@mui/material/styles';\nimport { Grid } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Plan from './components/Plan';\nimport UserStats from './components/UserStats';\nimport { AbiItem } from 'ethereum-abi-types-generator';\n\nimport ConnectButton from \"./components/ConnectButton\";\n\nimport headerbg from './assets/img/header.jpg'\n\nimport {ContractContext} from './assets/abi/farm-contract';\nimport Web3 from \"web3\";\n\n//\n//  Global setup Web3 Contract-Interaction\n//\nimport abi from \"./assets/abi/farm-contract.json\";\nconst contractAddress: string = '0x8429E11F40eC55c447Aac9e6EF2E57E243CD2994';\n\ndeclare global {\n  interface Window {\n    farm_contract: ContractContext;\n    web3: Web3;\n    ethereum: any;\n    contractAddress: string;\n    contract_abi: AbiItem[]\n    walletAddress: string;\n    connected: boolean;\n  }\n}\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.h3,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\n\nfunction App() {\n  \n  window.contractAddress = contractAddress;\n  window.contract_abi = abi as AbiItem[];\n\n  //  Main Layout\n  //\n  return (\n    <Box sx={{ flexGrow: 1 }} style={{width: \"80%\", margin: \"auto\", marginTop: \"32px\"}}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Item style={{height: \"100px\"}}>MyBnbFarm</Item>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper style={{padding: \"16px\"}}>\n            <ConnectButton />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <UserStats></UserStats>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Plan label={\"Plan 1\"} minInvest={0.05} percentage={23} days={7} planIndex={0}></Plan>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Plan label={\"Plan 2\"} minInvest={0.05} percentage={7} days={30} planIndex={1}></Plan>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Plan label={\"Plan 3\"} minInvest={0.05} percentage={5} days={50}  planIndex={2}></Plan>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Plan label={\"VIP Plan\"} minInvest={1} percentage={30} days={5}  planIndex={3}></Plan>\n        </Grid>\n        {/* <Grid item xs={12} md={12}>\n          <PlanDynamic label={\"Dynamic\"} percentage={7} days={20}></PlanDynamic>\n        </Grid> */}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\n\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}